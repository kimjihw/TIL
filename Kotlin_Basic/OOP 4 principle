[2023-05-31]

객체지향 프로그래밍의 4가지 요소

애자일 기법 -> 코드를 간결하고 무결하게 만드는 것

waterfall 방법론  

- 소프트웨어 개발 단계가 위에서부터 아래로 폭포에서 물이 떨어지듯 순차적으로 진행
- 한단계씩 진행함에 따라 다시 이전 단계로 가지 않고 계속 진행하기에 다음 단계로 가기전에 완벽하게 요구사항을 반영하여 개발했다는 것을 전제로 함

요구사항 분석 -> 설계 -> 구현 -> 테스트 -> 유지보수

장점

수직적으로 진행되기에 각 과정에 대한 이해가 용이

단점

수직적으로 진행되기 때문에 개발 도중에 요구사항이 변경되었을 경우 추가적인 비용과 시간이 들게 됨 -> 수정사항을 반영하여 처음부터 진행하게 됨

애자일 방법론

- 소프트웨어 개발 단계를 명확하게 구분하지않고 각 단계를 반복적으로 수행하면서 진행
- 잦은 요구사항의 변경이나 큰 프로젝트를 맡게 되어 요구사항 분석 및 설계를 완벽하게 하기 어려운 경우 폭포수 방법론보다 적합함

1. 캡슐화

캡슐화  

- 프로퍼티와 행위들이 한곳에서 결합
- 데이터와 함수를 하나의 단위로 묶는 것을 포함하는 객체지향 프로그래밍 기법으로 클래스라고 함
- 외부로부터 보호하는 데도 유용

- 모든 프로퍼티와 함수는 하나의 컨터이너에 배치
- 모든 프로퍼티는 비공개로 선언
- 프로퍼티는 제한되어 있으며 직접 접근 불가능