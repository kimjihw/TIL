[2023-09-05]

1.1 객체와 개체 차이

- 개체는 Entity, 객체는 Object
- 객체는 개체를 포함한 더 큰 개념
- 객체 -> 대상에 대한 정보뿐만 아니라 동작, 기능, 절차 등을 포함하는 것이 객체

1.2 Entity 

- 관련이 있는 속성들이 모여 하나의 정보 단위를 이루는 것
- 데이터베이스 테이블을 만든다고 생각하면 됨

1.3 DAO

- Data Access Object의 줄임말
- 데이터에 접근할 수 있는 메서드를 정의해놓은 인터페이스
- @Insert를 붙이면 테이블에 데이터 삽입
- @Update를 붙이면 테이블의 데이터 수정
- @Delete를 붙이면 테이블의 데이터 삭제이다.

1.3 Room Database

- 데이터베이스를 생성하고 관리하는 데이터베이스 객체를 만들기 위해서 추상 클래스를 만들어 줘야 함

1.4 SOLID 원칙

SRP (Single Responsibility Principle) -> 단일 책임 원칙

- 클래스(객체)는 단 하나의 기능을 담당하여 하나의 책임을 수행하는데 집중되도록 클래스를 따로따로 여러개 설계하라는 원칙
- 만일 하나의 클래스에 기능이 여러개 있다면 수정이 일어났을 경우 수정해야할 코드가 많아지기 때문

OPC (Open Closed Principle) -> 개방 폐쇄 원칙

- 클래스는 확장에 열려있어야 하며, 수정에는 닫혀있어야 한다는 의미
- 기능 추가 요청이 오면 클래스 확장을 통해 손쉽게 구현하면서 확장에 따른 클래스 수정은 최소화하도록 프로그램을 작성해야 하는 설계 기법
[확장에 열려있다] -> 새로운 변경 사항이 발생했을 때 유연하게 코드를 추가함으로써 큰 힘을 들이지 않고 애플리케이션의 기능을 확장할 수 있음
[수정에 닫혀있다] -> 새로운 변경 사항이 발생했을 때 객체를 직접적으로 수정을 제한
- 추상화 사용을 통한 관계 구축을 권장
- 다형성과 확장을 가능케 하는 객체지향의 장점을 극대화하는 기본적인 설계 원칙